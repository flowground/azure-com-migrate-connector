{
    "title": "Azure Migrate",
    "description": "Move your workloads to Azure.",
    "docsUrl": "",
    "url": "https://api.apis.guru/v2/specs/azure.com/migrate/2018-02-02/swagger.json",
    "envVars": {
        "OAUTH_CLIENT_ID": {
            "description": "OAuth Client ID"
        },
        "OAUTH_CLIENT_SECRET": {
            "description": "OAuth Client Secret"
        }
    },
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://management.azure.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "azure_auth": {
                "label": "Azure Active Directory OAuth2 Flow",
                "viewClass": "OAuthFieldView"
            }
        },
        "oauth2": {
            "client_id": "{{OAUTH_CLIENT_ID}}",
            "client_secret": "{{OAUTH_CLIENT_SECRET}}",
            "auth_uri": "https://login.microsoftonline.com/common/oauth2/authorize"
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "Operations_List": {
            "main": "./lib/actions/Operations_List.js",
            "title": "Get list of operations supported in the API.",
            "description": "Get a list of REST API supported by Microsoft.Migrate provider.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Operations_List.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssessmentOptions_Get": {
            "main": "./lib/actions/AssessmentOptions_Get.js",
            "title": "Get the assessment options.",
            "description": "Get the available options for the properties of an assessment.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssessmentOptions_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Location_CheckNameAvailability": {
            "main": "./lib/actions/Location_CheckNameAvailability.js",
            "title": "Checks whether the project name is available in the specified region.",
            "description": "Checks whether the project name is available in the specified region.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Location_CheckNameAvailability.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Projects_ListBySubscription": {
            "main": "./lib/actions/Projects_ListBySubscription.js",
            "title": "Get all projects.",
            "description": "Get all the projects in the subscription.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Projects_ListBySubscription.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Assessments_ListByProject": {
            "main": "./lib/actions/Assessments_ListByProject.js",
            "title": "Get all assessments created in the project.",
            "description": "Get all assessments created in the project.\n\nReturns a json array of objects of type 'assessment' as specified in Models section.\n",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Assessments_ListByProject.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Groups_ListByProject": {
            "main": "./lib/actions/Groups_ListByProject.js",
            "title": "Get all groups",
            "description": "Get all groups created in the project. Returns a json array of objects of type 'group' as specified in the Models section.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Groups_ListByProject.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Groups_Delete": {
            "main": "./lib/actions/Groups_Delete.js",
            "title": "Delete the group",
            "description": "Delete the group from the project. The machines remain in the project. Deleting a non-existent group results in a no-operation.\n\nA group is an aggregation mechanism for machines in a project. Therefore, deleting group does not delete machines in it.\n",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Groups_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Groups_Get": {
            "main": "./lib/actions/Groups_Get.js",
            "title": "Get a specific group.",
            "description": "Get information related to a specific group in the project. Returns a json object of type 'group' as specified in the models section.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Groups_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Groups_Create": {
            "main": "./lib/actions/Groups_Create.js",
            "title": "Create a new group with specified settings. If group with the name provided already exists, then the existing group is updated.",
            "description": "Create a new group by sending a json object of type 'group' as given in Models section as part of the Request Body. The group name in a project is unique. Labels can be applied on a group as part of creation.\n\nIf a group with the groupName specified in the URL already exists, then this call acts as an update.\n\nThis operation is Idempotent.\n",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Groups_Create.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Assessments_ListByGroup": {
            "main": "./lib/actions/Assessments_ListByGroup.js",
            "title": "Get all assessments created for the specified group.",
            "description": "Get all assessments created for the specified group.\n\nReturns a json array of objects of type 'assessment' as specified in Models section.\n",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Assessments_ListByGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Assessments_Delete": {
            "main": "./lib/actions/Assessments_Delete.js",
            "title": "Deletes an assessment from the project.",
            "description": "Delete an assessment from the project. The machines remain in the assessment. Deleting a non-existent assessment results in a no-operation.\n\nWhen an assessment is under computation, as indicated by the 'computationState' field, it cannot be deleted. Any such attempt will return a 400 - Bad Request.\n",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Assessments_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Assessments_Get": {
            "main": "./lib/actions/Assessments_Get.js",
            "title": "Get an assessment.",
            "description": "Get an existing assessment with the specified name. Returns a json object of type 'assessment' as specified in Models section.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Assessments_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Assessments_Create": {
            "main": "./lib/actions/Assessments_Create.js",
            "title": "Create or Update assessment.",
            "description": "Create a new assessment with the given name and the specified settings. Since name of an assessment in a project is a unique identifier, if an assessment with the name provided already exists, then the existing assessment is updated.\n\nAny PUT operation, resulting in either create or update on an assessment, will cause the assessment to go in a \"InProgress\" state. This will be indicated by the field 'computationState' on the Assessment object. During this time no other PUT operation will be allowed on that assessment object, nor will a Delete operation. Once the computation for the assessment is complete, the field 'computationState' will be updated to 'Ready', and then other PUT or DELETE operations can happen on the assessment.\n\nWhen assessment is under computation, any PUT will lead to a 400 - Bad Request error.\n",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Assessments_Create.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssessedMachines_ListByAssessment": {
            "main": "./lib/actions/AssessedMachines_ListByAssessment.js",
            "title": "Get assessed machines for assessment.",
            "description": "Get list of machines that assessed as part of the specified assessment. Returns a json array of objects of type 'assessedMachine' as specified in the Models section.\n\nWhenever an assessment is created or updated, it goes under computation. During this phase, the 'status' field of Assessment object reports 'Computing'.\nDuring the period when the assessment is under computation, the list of assessed machines is empty and no assessed machines are returned by this call.\n",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssessedMachines_ListByAssessment.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "AssessedMachines_Get": {
            "main": "./lib/actions/AssessedMachines_Get.js",
            "title": "Get an assessed machine.",
            "description": "Get an assessed machine with its size & cost estimate that was evaluated in the specified assessment.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssessedMachines_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Assessments_GetReportDownloadUrl": {
            "main": "./lib/actions/Assessments_GetReportDownloadUrl.js",
            "title": "Get download URL for the assessment report.",
            "description": "Get the URL for downloading the assessment in a report format.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Assessments_GetReportDownloadUrl.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Machines_ListByProject": {
            "main": "./lib/actions/Machines_ListByProject.js",
            "title": "Get all machines in the project",
            "description": "Get data of all the machines available in the project. Returns a json array of objects of type 'machine' defined in Models section.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Machines_ListByProject.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Machines_Get": {
            "main": "./lib/actions/Machines_Get.js",
            "title": "Get a specific machine.",
            "description": "Get the machine with the specified name. Returns a json object of type 'machine' defined in Models section.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Machines_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Projects_ListByResourceGroup": {
            "main": "./lib/actions/Projects_ListByResourceGroup.js",
            "title": "Get all projects.",
            "description": "Get all the projects in the resource group.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Projects_ListByResourceGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Projects_Delete": {
            "main": "./lib/actions/Projects_Delete.js",
            "title": "Delete the project",
            "description": "Delete the project. Deleting non-existent project is a no-operation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Projects_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Projects_Get": {
            "main": "./lib/actions/Projects_Get.js",
            "title": "Get the specified project.",
            "description": "Get the project with the specified name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Projects_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Projects_Update": {
            "main": "./lib/actions/Projects_Update.js",
            "title": "Update project.",
            "description": "Update a project with specified name. Supports partial updates, for example only tags can be provided.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Projects_Update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Projects_Create": {
            "main": "./lib/actions/Projects_Create.js",
            "title": "Create or update project.",
            "description": "Create a project with specified name. If a project already exists, update it.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Projects_Create.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Projects_GetKeys": {
            "main": "./lib/actions/Projects_GetKeys.js",
            "title": "Get shared keys for the project.",
            "description": "Gets the Log Analytics Workspace ID and Primary Key for the specified project.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Projects_GetKeys.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}